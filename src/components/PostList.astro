---
export interface Props {
  posts: BlogEntry[]
}
import type { BlogEntry } from '../types'
import {
  getPublishDate,
  estimateReadingTime,
  getPostTitle,
  formatDate,
} from '../utils'
import PostMetadata from './PostMetadata.astro'

const { posts } = Astro.props

const groupedPosts = posts.reduce(
  (acc, post) => {
    const date = getPublishDate(post)
    if (!date) return acc
    const year = date.getFullYear()
    if (!acc[year]) {
      acc[year] = []
    }
    acc[year].push(post)
    return acc
  },
  {} as Record<number, BlogEntry[]>
)

const sortedYears = Object.keys(groupedPosts)
  .map(Number)
  .sort((a, b) => b - a)
---

<main class="container mx-auto px-4 py-12">
  <div class="max-w-3xl mx-auto">
    {
      sortedYears.map((year, index) => (
        <div class="mb-28">
          <div class="mt-28 relative h-10">
            <h2
              class="
              text-[180px] leading-[0.8] mb-12 font-bold text-left -ml-4
              opacity-30
              absolute
              -left-10
              -top-20
              z-0
            "
            >
              {year}
            </h2>
          </div>
          <div class="space-y-6 relative">
            {groupedPosts[year].map((post) => (
              <article class="group">
                <a href={`/post/${getPostTitle(post)}`} class="block">
                  <div class="flex flex-col">
                    <h3 class="text-xl font-medium text-gray-200 group-hover:text-white transition-colors">
                      {getPostTitle(post)}
                    </h3>
                    <PostMetadata post={post} />
                  </div>
                </a>
              </article>
            ))}
          </div>
        </div>
      ))
    }
  </div>
</main>
